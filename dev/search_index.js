var documenterSearchIndex = {"docs":
[{"location":"api/#API-Documentation","page":"API Documentation","title":"API Documentation","text":"","category":"section"},{"location":"api/#PlotlySupply.plot_heatmap-Tuple{Array}","page":"API Documentation","title":"PlotlySupply.plot_heatmap","text":"function plot_heatmap(\n\tU::Array; \n\txlabel::String = \"\",\n\tylabel::String = \"\",\n\txrange::Vector = [0, 0],\n\tyrange::Vector = [0, 0],\n\tzrange::Vector = [0, 0],\n\twidth::Int = 0,\n\theight::Int = 0,\n\tcolorscale::String = \"Jet\",\n\ttitle::String = \"\",\n\tequalar::Bool = false,\n)\n\nPlots heatmap (holographic) data (axes not specified).\n\nArguments\n\nU: 2D hologram data\n\nKeywords\n\nxlabel: Label for the x-axis (default: \"\")\nylabel: Label for the y-axis (default: \"\")\nzrange: Range for the z-axis (default: [0, 0])\ncolorscale: Color scale for the heatmap (default: \"Jet\")\ntitle: Title of thje figure (default: \"\")\n\n\n\n\n\n","category":"method"},{"location":"api/#PlotlySupply.plot_heatmap-Tuple{Union{AbstractRange, Vector}, Union{AbstractRange, Vector}, Array}","page":"API Documentation","title":"PlotlySupply.plot_heatmap","text":"function plot_heatmap(\n\tx::Union{AbstractRange, Vector},\n\ty::Union{AbstractRange, Vector},\n\tU::Array; \n\txlabel::String = \"\",\n\tylabel::String = \"\",\n\txrange::Vector = [0, 0],\n\tyrange::Vector = [0, 0],\n\tzrange::Vector = [0, 0],\n\twidth::Int = 0,\n\theight::Int = 0,\n\tcolorscale::String = \"Jet\",\n\ttitle::String = \"\",\n\tequalar::Bool = false,\n)\n\nPlots heatmap (holographic) data.\n\nArguments\n\n'x::AbstractRange': x-axis range\n'y::AbstractRange': x-axis range\nU: 2D hologram data\n\nKeywords\n\nxlabel: Label for the x-axis (default: \"\")\nylabel: Label for the y-axis (default: \"\")\nzrange: Range for the z-axis (default: [0, 0])\ncolorscale: Color scale for the heatmap (default: \"Jet\")\ntitle: Title of thje figure (default: \"\")\n\n\n\n\n\n","category":"method"},{"location":"api/#PlotlySupply.plot_quiver-NTuple{4, Union{AbstractRange, Vector}}","page":"API Documentation","title":"PlotlySupply.plot_quiver","text":"function plot_quiver(\n\tx::Union{AbstractRange, Vector},\n\ty::Union{AbstractRange, Vector},\n\tu::Union{AbstractRange, Vector},\n\tv::Union{AbstractRange, Vector};\n\tcolor::String = \"RoyalBlue\",\n\tsizeref::Real = 1,\n\txlabel::String = \"\",\n\tylabel::String = \"\",\n\txrange::Vector = [0, 0],\n\tyrange::Vector = [0, 0],\n\twidth::Int = 0,\n\theight::Int = 0,\n\ttitle::String = \"\",\n\tgrid::Bool = true,\n)\n\nPlots a 2D quiver (vector field) diagram using arrow segments.\n\nArguments\n\nx: x-coordinates of vector origins\ny: y-coordinates of vector origins\nu: x-components of vector directions\nv: y-components of vector directions\n\nKeywords\n\ncolor: Arrow color (default: \"RoyalBlue\")\nsizeref: Reference scaling for arrow length (default: 1)\nxlabel: Label for the x-axis (default: \"\")\nylabel: Label for the y-axis (default: \"\")\nxrange: Range for the x-axis (default: [0, 0])\nyrange: Range for the y-axis (default: [0, 0])\nwidth: Width of the figure in pixels (default: 0)\nheight: Height of the figure in pixels (default: 0)\ntitle: Title of the figure (default: \"\")\ngrid: Whether to show the grid or not (default: true)\n\n\n\n\n\n","category":"method"},{"location":"api/#PlotlySupply.plot_quiver3d-NTuple{6, Union{AbstractRange, Vector}}","page":"API Documentation","title":"PlotlySupply.plot_quiver3d","text":"plot_quiver3d(\n\tx::Union{AbstractRange, Vector},\n\ty::Union{AbstractRange, Vector},\n\tz::Union{AbstractRange, Vector},\n\tu::Union{AbstractRange, Vector},\n\tv::Union{AbstractRange, Vector},\n\tw::Union{AbstractRange, Vector};\n\tsizeref::Real = 1,\n\txrange::Vector = [0, 0],\n\tyrange::Vector = [0, 0],\n\tzrange::Vector = [0, 0],\n\twidth::Int = 0,\n\theight::Int = 0,\n\tcolor::Union{String, Vector{String}} = \"\",\n\tcolorscale::String = \"Jet\",\n\txlabel::String = \"\",\n\tylabel::String = \"\",\n\tzlabel::String = \"\",\n\taspectmode::String = \"auto\",\n\ttitle::String = \"\",\n\tperspective::Bool = true,\n\tgrid::Bool = true,\n\tshowaxis::Bool = true,\n)\n\nGenerates a 3D vector field (quiver plot) using cones via PlotlyJS.\n\nArguments\n\nx, y, z: Coordinates of vector origins.\nu, v, w: Components of the vector field at the corresponding positions.\n\nKeyword Arguments\n\nsizeref: Scaling factor for cone size (default: 1).\nxrange, yrange, zrange: Axis limits in the form [min, max]. If [0, 0], auto-scaling is used.\nwidth, height: Dimensions of the figure in pixels.\ncolor: If specified, sets a uniform color for all vectors.\ncolorscale: Name of the Plotly colorscale to use when color is not specified (default: \"Jet\").\nxlabel, ylabel, zlabel: Labels for x, y, z axes.\naspectmode: Aspect mode for 3D rendering. Options include \"auto\", \"cube\", \"data\".\ntitle: Title of the plot.\nperspective: If false, uses orthographic projection. Defaults to perspective view.\ngrid: Controls visibility of grid lines.\nshowaxis: Controls visibility of axis lines and labels.\n\nReturns\n\nA Plot object containing the 3D quiver plot.\n\nNotes\n\nBy default, the vector field is visualized using cones with magnitude scaling via sizeref.\nIf color is specified, all cones are displayed in a uniform color without a color bar.\n\n\n\n\n\n","category":"method"},{"location":"api/#PlotlySupply.plot_scatter-Tuple{Union{AbstractRange, Vector}, Union{AbstractRange, Vector}}","page":"API Documentation","title":"PlotlySupply.plot_scatter","text":"function plot_scatter(\n\tx::Union{AbstractRange, Vector},\n\ty::Union{AbstractRange, Vector};\n\txlabel::String = \"\",\n\tylabel::String = \"\",\n\txrange::Vector = [0, 0],\n\tyrange::Vector = [0, 0],\n\twidth::Int = 0,\n\theight::Int = 0,\n\tmode::Union{String, Vector{String}} = \"lines\",\n\tdash::Union{String, Vector{String}} = \"\",\n\tcolor::Union{String, Vector{String}} = \"\",\n\tlegend::Union{String, Vector{String}} = \"\",\n\ttitle::String = \"\",\n\tgrid::Bool = true,\n)\n\nPlots a rectangular (Cartesian) plot.\n\nArguments\n\nx: x-coordinate data (can be vector of vectors)\ny: y-coordinate data (can be vector of vectors)\n\nKeywords\n\nxlabel: Label for the x-axis (default: \"\")\nylabel: Label for the y-axis (default: \"\")\nxrange: Range for the x-axis (default: [0, 0])\nyrange: Range for the y-axis (default: [0, 0])\nwidth: Width of the plot (default: 0)\nheight: Height of the plot (default: 0)\nmode: Plotting mode (default: \"lines\", can be vector)\ndash: line style (\"dash, \"dashdot\", or \"dot\", default: \"\", can be vector)\ncolor: Color of the plot lines (default: \"\", can be vector)\nlegend: Name of the plot lines (default: \"\", can be vector)\ntitle: Title of thje figure (default: \"\")\ngrid: Whether to show the grid or not (default: true)\n\n\n\n\n\n","category":"method"},{"location":"api/#PlotlySupply.plot_scatter-Tuple{Union{AbstractRange, Vector}}","page":"API Documentation","title":"PlotlySupply.plot_scatter","text":"function plot_scatter(\n\ty::Union{AbstractRange, Vector}; \n\txlabel::String = \"\",\n\tylabel::String = \"\",\n\txrange::Vector = [0, 0],\n\tyrange::Vector = [0, 0],\n\twidth::Int = 0,\n\theight::Int = 0,\n\tmode::Union{String, Vector{String}} = \"lines\",\n\tdash::Union{String, Vector{String}} = \"\",\n\tcolor::Union{String, Vector{String}} = \"\",\n\tlegend::Union{String, Vector{String}} = \"\",\n\ttitle::String = \"\",\n\tgrid::Bool = true,\n)\n\nPlots a rectangular (Cartesian) plot (x-axis not specified).\n\nArguments\n\ny: y-coordinate data (can be vector of vectors)\n\nKeywords\n\nxlabel: Label for the x-axis (default: \"\")\nylabel: Label for the y-axis (default: \"\")\nxrange: Range for the x-axis (default: [0, 0])\nyrange: Range for the y-axis (default: [0, 0])\nwidth: Width of the plot (default: 0)\nheight: Height of the plot (default: 0)\nmode: Plotting mode (default: \"lines\", can be vector)\ndash: line style (\"dash, \"dashdot\", or \"dot\", default: \"\", can be vector)\ncolor: Color of the plot lines (default: \"\", can be vector)\nlegend: legend of the plot lines (default: \"\", can be vector)\ntitle: Title of thje figure (default: \"\")\ngrid: Whether to show the grid or not (default: true)\n\n\n\n\n\n","category":"method"},{"location":"api/#PlotlySupply.plot_scatter3d-Tuple{Union{AbstractRange, Vector}, Union{AbstractRange, Vector}, Union{AbstractRange, Vector}}","page":"API Documentation","title":"PlotlySupply.plot_scatter3d","text":"plot_scatter3d(\n\tx::Union{AbstractRange, Vector},\n\ty::Union{AbstractRange, Vector},\n\tz::Union{AbstractRange, Vector};\n\txrange::Vector = [0, 0],\n\tyrange::Vector = [0, 0],\n\tzrange::Vector = [0, 0],\n\twidth::Int = 0,\n\theight::Int = 0,\n\tmode::Union{String, Vector{String}} = \"lines\",\n\tcolor::Union{String, Vector{String}} = \"\",\n\tlegend::Union{String, Vector{String}} = \"\",\n\txlabel::String = \"\",\n\tylabel::String = \"\",\n\tzlabel::String = \"\",\n\taspectmode::String = \"auto\",\n\ttitle::String = \"\",\n\tperspective::Bool = true,\n\tgrid::Bool = true,\n\tshowaxis::Bool = true,\n)\n\nPlots a 3D scatter or line plot using PlotlyJS, with options for customizing appearance and handling multiple curves.\n\nArguments\n\nx, y, z: Coordinate vectors. If z is a Vector{Vector} (i.e., multiple datasets), x and y must also be Vector{Vector} of the same length.\n\nKeyword Arguments\n\nxrange, yrange, zrange: Axis limits in the form [min, max]. If [0, 0], auto-scaling is used.\nwidth, height: Plot dimensions in pixels.\nmode: Drawing mode (\"lines\", \"markers\", \"lines+markers\"). Can be a vector for multiple traces.\ncolor: Line color(s). Can be a single string or a vector of strings for multiple traces.\nlegend: Trace label(s) for the legend. Can be a string or a vector.\nxlabel, ylabel, zlabel: Axis labels. Defaults are \"x\", \"y\", and \"z\".\naspectmode: Aspect mode for 3D view. Options include \"auto\", \"cube\", and \"data\".\ntitle: Title of the plot.\nperspective: If false, uses orthographic projection. Defaults to perspective projection.\ngrid: Whether to show grid lines.\nshowaxis: Whether to show axis lines and labels.\n\nReturns\n\nA Plot object containing the 3D scatter or line plot.\n\nNotes\n\nThis function supports plotting multiple lines by passing Vector{Vector} types to x, y, and z. In this case, corresponding vectors of mode, color, and legend will be used.\n\n\n\n\n\n","category":"method"},{"location":"api/#PlotlySupply.plot_scatterpolar-Tuple{Union{AbstractRange, Vector}, Union{AbstractRange, Vector}}","page":"API Documentation","title":"PlotlySupply.plot_scatterpolar","text":"function plot_scatterpolar(\n\ttheta::Union{AbstractRange, Vector},\n\tr::Union{AbstractRange, Vector};\n\ttrange::Vector = [0, 0],\n\trrange::Vector = [0, 0],\n\twidth::Int = 0,\n\theight::Int = 0,\n\tmode::Union{String, Vector{String}} = \"lines\",\n\tcolor::Union{String, Vector{String}} = \"\",\n\tlegend::Union{String, Vector{String}} = \"\",\n\ttitle::String = \"\",\n\tgrid::Bool = true,\n)\n\nPlots a polar plot.\n\nArguments\n\ntheta: Angular coordinate data (can be vector of vectors)\nr: Radial coordinate data (can be vector of vectors)\n\nKeywords\n\ntrange: Range for the angular axis (default: [0, 0])\nrrange: Range for the radial axis (default: [0, 0])\nwidth: Width of the plot (default: 0)\nheight: Height of the plot (default: 0)\nmode: Plotting mode (default: \"lines\", can be vector)\ncolor: Color of the plot lines (default: \"\", can be vector)\nlegend: legend of the plot lines (default: \"\", can be vector)\ntitle: Title of thje figure (default: \"\")\ngrid: Whether to show the grid or not (default: true)\n\n\n\n\n\n","category":"method"},{"location":"api/#PlotlySupply.plot_stem-Tuple{Union{AbstractRange, Vector}, Union{AbstractRange, Vector}}","page":"API Documentation","title":"PlotlySupply.plot_stem","text":"function plot_stem(\n\tx::Union{AbstractRange, Vector},\n\ty::Union{AbstractRange, Vector};\n\txlabel::String = \"\",\n\tylabel::String = \"\",\n\txrange::Vector = [0, 0],\n\tyrange::Vector = [0, 0],\n\twidth::Int = 0,\n\theight::Int = 0,\n\tcolor::Union{String, Vector{String}} = \"\",\n\tlegend::Union{String, Vector{String}} = \"\",\n\ttitle::String = \"\",\n\tgrid::Bool = true,\n)\n\nPlots a rectangular stem plot.\n\nArguments\n\nx: x-coordinate data (can be vector of vectors)\ny: y-coordinate data (can be vector of vectors)\n\nKeywords\n\nxlabel: Label for the x-axis (default: \"\")\nylabel: Label for the y-axis (default: \"\")\nxrange: Range for the x-axis (default: [0, 0])\nyrange: Range for the y-axis (default: [0, 0])\nwidth: Width of the plot (default: 0)\nheight: Height of the plot (default: 0)\nmode: Plotting mode (default: \"lines\", can be vector)\ncolor: Color of the plot lines (default: \"\", can be vector)\nlegend: Name of the plot lines (default: \"\", can be vector)\ntitle: Title of thje figure (default: \"\")\ngrid: Whether to show the grid or not (default: true)\n\n\n\n\n\n","category":"method"},{"location":"api/#PlotlySupply.plot_stem-Tuple{Union{AbstractRange, Vector}}","page":"API Documentation","title":"PlotlySupply.plot_stem","text":"function plot_stem(\n\ty::Union{AbstractRange, Vector};\n\txlabel::String = \"\",\n\tylabel::String = \"\",\n\txrange::Vector = [0, 0],\n\tyrange::Vector = [0, 0],\n\twidth::Int = 0,\n\theight::Int = 0,\n\tcolor::Union{String, Vector{String}} = \"\",\n\tlegend::Union{String, Vector{String}} = \"\",\n\ttitle::String = \"\",\n\tgrid::Bool = true,\n)\n\nPlots a rectangular stem plot (x-axis not specified).\n\nArguments\n\ny: y-coordinate data (can be vector of vectors)\n\nKeywords\n\nxlabel: Label for the x-axis (default: \"\")\nylabel: Label for the y-axis (default: \"\")\nxrange: Range for the x-axis (default: [0, 0])\nyrange: Range for the y-axis (default: [0, 0])\nwidth: Width of the plot (default: 0)\nheight: Height of the plot (default: 0)\nmode: Plotting mode (default: \"lines\", can be vector)\ncolor: Color of the plot lines (default: \"\", can be vector)\nlegend: legend of the plot lines (default: \"\", can be vector)\ntitle: Title of thje figure (default: \"\")\ngrid: Whether to show the grid or not (default: true)\n\n\n\n\n\n","category":"method"},{"location":"api/#PlotlySupply.plot_surface-Tuple{Array, Array, Array}","page":"API Documentation","title":"PlotlySupply.plot_surface","text":"function plot_surface(\n\tX::Array,\n\tY::Array,\n\tZ::Array;\n\tsurfacecolor::Array = [],\n\txrange::Vector = [0, 0],\n\tyrange::Vector = [0, 0],\n\tzrange::Vector = [0, 0],\n\twidth::Int = 0,\n\theight::Int = 0,\n\txlabel::String = \"\",\n\tylabel::String = \"\",\n\tzlabel::String = \"\",\n\taspectmode::String = \"auto\",\n\tcolorscale::String = \"Jet\",\n\ttitle::String = \"\",\n\tgrid::Bool = true,\n\tshowaxis::Bool = true,\n)\n\nPlots a 3D surface using x, y, z coordinate grids.\n\nArguments\n\nX: Grid of x-coordinates\nY: Grid of y-coordinates\nZ: Grid of z-values defining the surface height\n\nKeywords\n\nsurfacecolor: Color values for each surface point (default: [])\nxrange: Range for the x-axis (default: [0, 0])\nyrange: Range for the y-axis (default: [0, 0])\nzrange: Range for the z-axis (default: [0, 0])\nwidth: Width of the figure in pixels (default: 0)\nheight: Height of the figure in pixels (default: 0)\nxlabel: Label for the x-axis (default: \"x\")\nylabel: Label for the y-axis (default: \"y\")\nzlabel: Label for the z-axis (default: \"z\")\naspectmode: Aspect mode setting (default: \"auto\")\ncolorscale: Color scale for the surface (default: \"Jet\")\ntitle: Title of the figure (default: \"\")\ngrid: Whether to display grid lines (default: true)\nshowaxis: Whether to show axis lines and labels (default: true)\n\n\n\n\n\n","category":"method"},{"location":"api/#PlotlySupply.plot_surface-Tuple{Array}","page":"API Documentation","title":"PlotlySupply.plot_surface","text":"plot_surface(\n\tZ::Array;\n\tsurfacecolor::Array = [],\n\txrange::Vector = [0, 0],\n\tyrange::Vector = [0, 0],\n\tzrange::Vector = [0, 0],\n\twidth::Int = 0,\n\theight::Int = 0,\n\txlabel::String = \"\",\n\tylabel::String = \"\",\n\tzlabel::String = \"\",\n\taspectmode::String = \"auto\",\n\tcolorscale::String = \"Jet\",\n\ttitle::String = \"\",\n\tgrid::Bool = true,\n\tshowaxis::Bool = true,\n)\n\nPlots a 3D surface given a matrix of height values Z, using the array indices as x and y coordinates.\n\nArguments\n\nZ::Array: 2D array representing surface height. The dimensions of Z define the surface grid, with x and y coordinates automatically generated as 0:size(Z, 1)-1 and 0:size(Z, 2)-1.\n\nKeyword Arguments\n\nsurfacecolor::Array: Optional array for surface coloring. If empty, Z is used for coloring.\nxrange::Vector: [xmin, xmax] range for the x-axis. [0, 0] disables manual range.\nyrange::Vector: [ymin, ymax] range for the y-axis.\nzrange::Vector: [zmin, zmax] range for the z-axis.\nwidth::Int: Width of the figure in pixels. 0 uses default.\nheight::Int: Height of the figure in pixels. 0 uses default.\nxlabel::String: Label for x-axis (defaults to \"x\" if empty).\nylabel::String: Label for y-axis (defaults to \"y\" if empty).\nzlabel::String: Label for z-axis (defaults to \"z\" if empty).\naspectmode::String: 3D scene aspect mode (\"auto\", \"cube\", \"data\").\ncolorscale::String: Colorscale name (e.g., \"Jet\", \"Viridis\").\ntitle::String: Plot title.\ngrid::Bool: If false, disables grid lines.\nshowaxis::Bool: If false, hides all axes.\n\nReturns\n\nA Plot object rendered using PlotlyJS.\n\nNotes\n\nThis function is a convenience wrapper for plot_surface(X, Y, Z; ...), where X and Y are index grids derived from the shape of Z.\n\n\n\n\n\n","category":"method"},{"location":"api/#PlotlySupply.set_template!","page":"API Documentation","title":"PlotlySupply.set_template!","text":"set_template!(fig, template = \"plotly_white\")\n\nApplies a visual template to a PlotlyJS figure.\n\nArguments\n\nfig: A PlotlyJS.Plot object.\ntemplate: String specifying the template to apply (default: :plotly_white).\n\nNotes\n\nThis modifies the figure in-place using relayout!.\nAvailable templates include :plotly, :ggplot2, :seaborn, :simple_white, :plotly_dark, etc.\n\n\n\n\n\n","category":"function"},{"location":"#Introduction","page":"Introduction","title":"Introduction","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"(Image: Build Status)","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"(Image: Coverage) ","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"PlotlySupply.jl is a lightweight Julia module that wraps PlotlyJS to supply a set of high-level abstractions for 2D and 3D plot visualizations. It simplifies the creation of line plots, heatmaps, quiver plots, polar plots, and surface plots, with consistent options for customization and layout control. Notice that this module re-exprots PlotlyJS.jl.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"#Overview-of-Functions","page":"Introduction","title":"Overview of Functions","text":"","category":"section"},{"location":"#2D-Cartesian-Plots","page":"Introduction","title":"2D Cartesian Plots","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"plot_scatter(x, y; ...): Line or marker plot for 1D data.\nplot_scatter(y; ...): Uses index as x-axis.\nplot_stem(x, y; ...): Stem plot using markers and vertical lines.\nplot_stem(y; ...): Uses index as x-axis.","category":"page"},{"location":"#2D-Polar-Plots","page":"Introduction","title":"2D Polar Plots","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"plot_scatterpolar(theta, r; ...): Polar plot in angular-radial coordinates.","category":"page"},{"location":"#2D-Heatmap-and-Vector-Plots","page":"Introduction","title":"2D Heatmap and Vector Plots","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"plot_heatmap(x, y, U; ...): Heatmap of matrix U over grid x, y.\nplot_heatmap(U; ...): Uses default x/y indices.\nplot_quiver(x, y, u, v; ...): 2D quiver plot with arrows from vectors (u,v) at locations (x,y).","category":"page"},{"location":"#3D-Plots","page":"Introduction","title":"3D Plots","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"plot_surface(X, Y, Z; ...): 3D surface plot with optional surface coloring.\nplot_surface(Z; ...): Uses index grids as X/Y.\nplot_scatter3d(x, y, z; ...): 3D scatter or line plot with multiple trace support.\nplot_quiver3d(x, y, z, u, v, w; ...): 3D vector field rendered with cones.","category":"page"},{"location":"#Utilities","page":"Introduction","title":"Utilities","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"set_template!(fig, template): Apply Plotly template style to a figure.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"#Examples","page":"Introduction","title":"Examples","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Please refer the API documentation for full functionality.","category":"page"},{"location":"#2D-Line-Plot","page":"Introduction","title":"2D Line Plot","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"plot_scatter(0:0.1:2π, sin.(0:0.1:2π); xlabel=\"x\", ylabel=\"sin(x)\", title=\"Sine Wave\")","category":"page"},{"location":"#2D-Heatmap","page":"Introduction","title":"2D Heatmap","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"x = -5:0.1:5\ny = -5:0.1:5\nU = [sin(sqrt(xi^2 + yj^2)) for yj in y, xi in x]\nplot_heatmap(x, y, U; xlabel=\"x\", ylabel=\"y\", title=\"Radial Sine\")","category":"page"},{"location":"#3D-Surface","page":"Introduction","title":"3D Surface","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"x = y = -2π:0.1:2π\nY, X = meshgrid(y, x) ## uses MeshGrid.jl\nZ = sin.(sqrt.(X.^2 .+ Y.^2))\nplot_surface(X, Y, Z; title=\"3D Surface\", colorscale=\"Viridis\")","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"#Common-Keyword-Arguments","page":"Introduction","title":"Common Keyword Arguments","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Most functions accept the following options:","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"Keyword Description Default\nxlabel, ylabel, zlabel Axis labels \"\" or \"x/y/z\"\nxrange, yrange, zrange Axis ranges as [min, max] [0, 0]\nwidth, height Plot size in pixels 0 (auto)\ncolor, colorscale Line or surface color settings \"\" or \"Jet\"\ntitle Plot title \"\"\ngrid Show/hide grid lines true\nshowaxis Show/hide axis lines and ticks true\naspectmode \"auto\", \"cube\", \"data\" \"auto\"\nmode \"lines\", \"markers\", \"lines+markers\" \"lines\"","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"#Notes","page":"Introduction","title":"Notes","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"All plots use the :plotly_white template by default.\nMost functions support both scalar and vectorized input (e.g., multiple traces).","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"#License","page":"Introduction","title":"License","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"This package is distributed under the MIT License.","category":"page"},{"location":"","page":"Introduction","title":"Introduction","text":"","category":"page"},{"location":"#Author","page":"Introduction","title":"Author","text":"","category":"section"},{"location":"","page":"Introduction","title":"Introduction","text":"Developed by Jake W. Liu. Contributions and issues are welcome.","category":"page"},{"location":"example/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"This page provides a gallery of examples to showcase the plotting capabilities of PlotlySupply.jl. Each example includes the Julia code used to generate the plot and the resulting figure. These examples are designed to help you get started with the package and demonstrate how to create a variety of common plot types.","category":"page"},{"location":"example/#plot_scatter","page":"Examples","title":"plot_scatter","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"Scatter plots are versatile and can be used to visualize relationships between variables, such as in line charts, scatter plots, or a combination of both.","category":"page"},{"location":"example/#Simple-Line-Plot","page":"Examples","title":"Simple Line Plot","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"This example demonstrates how to create a simple line plot of a quadratic function. We define our x and y coordinates and then pass them to plot_scatter with labels for the axes and a title.","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"# Simple line plot\nx = 1:10\ny = x.^2\nfig = plot_scatter(x, y, xlabel=\"X\", ylabel=\"Y²\", title=\"Quadratic Function\")","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"(Image: ScatterPlot)","category":"page"},{"location":"example/#Multiple-Lines-with-Different-Styles","page":"Examples","title":"Multiple Lines with Different Styles","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"Here, we showcase how to plot multiple lines on the same axes. We can customize the appearance of each line by specifying the mode, dash, color, and legend for each dataset.","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"# Multiple lines with different styles\nx = 1:10\ny1 = sin.(x)\ny2 = cos.(x)\nfig = plot_scatter(x, [y1, y2], \n                   mode=[\"lines+markers\", \"lines\"], \n                   dash=[\"\", \"dash\"],\n                   color=[\"blue\", \"red\"],\n                   legend=[\"sin(x)\", \"cos(x)\"])","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"(Image: ScatterPlot2)","category":"page"},{"location":"example/#plot_stem","page":"Examples","title":"plot_stem","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"Stem plots are ideal for visualizing discrete signals, showing data points as stems extending from a baseline.","category":"page"},{"location":"example/#Discrete-Signal-Visualization","page":"Examples","title":"Discrete Signal Visualization","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"This example illustrates how to create a stem plot for a simple discrete signal. This is particularly useful in signal processing to visualize the amplitude of a signal at different sample points.","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"# Discrete signal visualization\nn = 0:10\nsignal = [1, 0, -1, 0, 1, 0, -1, 0, 1, 0, -1]\nfig = plot_stem(n, signal, xlabel=\"Sample\", ylabel=\"Amplitude\")","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"(Image: StemPlot)","category":"page"},{"location":"example/#plot_scatterpolar","page":"Examples","title":"plot_scatterpolar","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"Polar plots are used to visualize data in a polar coordinate system, which is useful for cyclical data or directional data.","category":"page"},{"location":"example/#Polar-Rose-Pattern","page":"Examples","title":"Polar Rose Pattern","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"This example generates a beautiful rose pattern using a polar plot. The angle theta and radius r are used to create this intricate shape.","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"# Polar rose pattern\ntheta = 0:1:360\nr = 3 .* sind.(4 * theta)\nfig = plot_scatterpolar(theta, r, title=\"Rose Pattern\")","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"(Image: ScatterpolarPlot)","category":"page"},{"location":"example/#plot_heatmap","page":"Examples","title":"plot_heatmap","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"Heatmaps are excellent for visualizing 2D data, where values are represented by colors.","category":"page"},{"location":"example/#2D-Gaussian-Distribution","page":"Examples","title":"2D Gaussian Distribution","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"This example creates a heatmap of a 2D Gaussian distribution. The meshgrid function is used to create a grid of coordinates, and the color of each cell in the heatmap represents the value of the Gaussian function at that point.","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"# Gaussian distribution heatmap\nx = -8:0.1:8\ny = -5:0.1:5\nY, X = meshgrid(y, x)  # uses Meshgrid.jl\nZ = exp.(-(X.^2 + Y.^2))\nfig = plot_heatmap(x, y, Z, title=\"2D Gaussian\", colorscale=\"Viridis\", equalar=true)","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"(Image: HeatmapPlot)","category":"page"},{"location":"example/#plot_quiver","page":"Examples","title":"plot_quiver","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"Quiver plots are used to visualize vector fields, showing both the direction and magnitude of vectors at different points in space.","category":"page"},{"location":"example/#Vector-Field-Visualization","page":"Examples","title":"Vector Field Visualization","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"This example demonstrates how to plot a 2D vector field representing a circulation field. Arrows indicate the direction and magnitude of the vectors at each point on the grid.","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"# Vector field visualization\nx = -2:0.5:2\ny = -2:0.5:2\nY, X = meshgrid(y, x)  # uses Meshgrid.jl\nU = -Y[:]\nV = X[:]\nfig = plot_quiver(X[:], Y[:], U, V, sizeref = 0.5, title=\"Circulation Field\")","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"(Image: QuiverPlot)","category":"page"},{"location":"example/#plot_surface","page":"Examples","title":"plot_surface","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"Surface plots are used to create 3D representations of surfaces, which is useful for visualizing functions of two variables.","category":"page"},{"location":"example/#3D-Mountain-Surface","page":"Examples","title":"3D Mountain Surface","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"This example generates a 3D surface plot that resembles a mountain range. The height of the surface at each point is determined by the function Z.","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"# 3D mountain surface\nx = -3:0.1:3\ny = -3:0.1:3\nY, X = meshgrid(y, x)  # uses Meshgrid.jl\nZ = 3 * (1 .- X).^2 .* exp.(-(X.^2) - (Y .+ 1).^2)\nfig = plot_surface(X, Y, Z, title=\"3D Surface\", colorscale=\"Plasma\")","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"(Image: SurfacePlot)","category":"page"},{"location":"example/#plot_scatter3d","page":"Examples","title":"plot_scatter3d","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"3D scatter plots are used to visualize data points in three-dimensional space.","category":"page"},{"location":"example/#3D-Parametric-Curve","page":"Examples","title":"3D Parametric Curve","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"This example shows how to plot a 3D parametric curve, in this case, a helix. The x, y, and z coordinates are generated as a function of the parameter t.","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"# 3D parametric curve\nt = 0:0.1:4π\nx = cos.(t)\ny = sin.(t)\nz = t\nfig = plot_scatter3d(x, y, z, mode=\"lines\", title=\"3D Helix\")","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"(Image: Scatter3dPlot)","category":"page"},{"location":"example/#plot_quiver3d","page":"Examples","title":"plot_quiver3d","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"3D quiver plots are used to visualize vector fields in three dimensions.","category":"page"},{"location":"example/#3D-Vector-Field-Visualization","page":"Examples","title":"3D Vector Field Visualization","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"This example demonstrates how to create a 3D quiver plot to visualize a simple vector field. Each arrow represents a vector with a specific origin and direction.","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"# 3D magnetic field visualization\nx = [-1, 0, 1]\ny = [0, 0, 0]\nz = [0, 0, 0]\nu = [1, 0, -1]\nv = [0, 1, 0]\nw = [0, 0, 1]\nfig = plot_quiver3d(x, y, z, u, v, w, sizeref=0.5, title=\"3D Vector Field\")","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"(Image: Quiver3dPlot)","category":"page"},{"location":"example/#set_template!","page":"Examples","title":"set_template!","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"You can easily change the theme of your plots using the set_template! function.","category":"page"},{"location":"example/#Applying-a-Dark-Theme","page":"Examples","title":"Applying a Dark Theme","text":"","category":"section"},{"location":"example/","page":"Examples","title":"Examples","text":"This example shows how to apply the \"plotly_dark\" template to a plot, which can be useful for presentations or for matching a dark-themed environment.","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"fig = plot_scatter(1:10, (1:10).^2)\nset_template!(fig, \"plotly_dark\")","category":"page"},{"location":"example/","page":"Examples","title":"Examples","text":"(Image: TemplatePlot)","category":"page"}]
}
